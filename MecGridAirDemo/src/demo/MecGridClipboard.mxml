<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" xmlns:MecGrid="com.mechan.MecGrid.*" creationComplete="initApp();applyDataProvider()">
<mx:Script>
	<![CDATA[
		import com.mechan.MecGrid.mecGridClasses.MecGridEvent;
		import mx.collections.ArrayCollection;
		import com.mechan.MecGrid.mecGridClasses.MecGridConst;
		
		// This demonstrates how you can set MecGrid properties by XML.
		// You can build ResourceXML With MecGridWizard by Exporting and copy to clipboard the source XML.
		//
		// Reversely you can set the property of XML String to Binary data and vice versa.
		// 
		[Bindable]
		private var datasource:ArrayCollection;
		
		private var dp:Array = [{selected:false, country:'Korea', city:'Ulsan', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Korea', city:'Seoul', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Korea', city:'Pusan', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Korea', city:'Mokpo', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Korea', city:'Anyang', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Korea', city:'Sangju', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'New York', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'South Field', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'Irvington', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'Los Altos', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'Chicago', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'Tucson', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'France', city:'Paris', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'France', city:'Le Mans', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'France', city:'Lyon', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'France', city:'Marseille', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Germany', city:'Berlin', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Germany', city:'Hamburg', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Germany', city:'Dusseldorf', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United Kingdom', city:'London', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United Kingdom', city:'Cambridge', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United Kingdom', city:'Birmingham', qt1:0, qt2:0, qt3:0, qt4:0, avg:''}]
		
		private function initApp():void
		{
			var menu:ContextMenu = new ContextMenu();
			menu.hideBuiltInItems();
			var mclip:ContextMenuItem = new ContextMenuItem("Clipboard copy");
			mclip.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, copyClipboardHandler);
			menu.customItems = new Array();
			menu.customItems.push(mclip);
			
			mgrid.contextMenu = menu;
		}
		
		private function copyClipboardHandler(event:ContextMenuEvent):void
		{
			mgrid.CopySelectionClipboard();
		}
		
		private function applyDataProvider():void
		{
			var i:int;
			var n:int = 0;
			
			for (i=0; i < dp.length; i++)
			{
				dp[i].qt1 = Math.random() * 1000;
				dp[i].qt2 = Math.random() * 1000;
				dp[i].qt3 = Math.random() * 1000;
				dp[i].qt4 = Math.random() * 1000;
				n = i + mgrid.Rows.fixed;
				dp[i].avg = "=(D" + n + " + E" + n + " + F" + n + " + G" + n + ") / 4";
			}
			
			mgrid.addEventListener(MecGridEvent.DATAPROVIDER_UPDATE_FINISHED, dataProviderUpdatedHandler);
			datasource = new ArrayCollection(dp);

			// mgrid.dataProvider = dp;
		}
		
		private function dataProviderUpdatedHandler(event:MecGridEvent):void
		{
			mgrid.removeEventListener(MecGridEvent.DATAPROVIDER_UPDATE_FINISHED, dataProviderUpdatedHandler);
		}
		
		private function changeData():void
		{
			applyDataProvider();
		}
	]]>
</mx:Script>
	<mx:Label x="10" y="10" text="SYSTEM CLIPBOARD COPY" styleName="demoTitle"/>
	<mx:VBox bottom="10" right="10" top="40" left="10">
		<mx:Button label="Change Data" click="changeData()"/>
		<MecGrid:MecGrid id="mgrid" width="100%" height="100%" dataProvider="{datasource}">
			<MecGrid:ResourceXML>
				<mx:XML xmlns="">
		<List>
		  <option cols="6" fixedrows="2" fixedcols="0" extendlastcol="F" merge_option="4" merge_option_fixedcolumn="0" merge_option_fixedrow="2" showspreadsheet="F" selectionmode="12" sortoption="0" treeview="T" treeColumn="0" textalignment="6" textalignment_fixed="5"/>
		  <columns>
		    <column name="col_1" datafield="country" visible="T" editable="F" colindex="0" autowidth="T" width="61" datatype="5" textalign="4" textalign_fixed="10" formatstring="" merge="T" style="" enablefilter="T" header="Country;Country"/>
		    <column name="col_2" datafield="city" visible="T" editable="F" colindex="1" autowidth="T" width="61" datatype="5" textalign="4" textalign_fixed="10" formatstring="" merge="F" style="" enablefilter="T" header="City;City"/>
		    <column name="col_3" datafield="qt1" visible="T" editable="F" colindex="2" autowidth="T" width="88" datatype="5" textalign="10" textalign_fixed="10" formatstring="#,###.##" merge="F" style="" enablefilter="T" header="Visitors;1st Quater (A)"/>
		    <column name="col_4" datafield="qt2" visible="T" editable="F" colindex="3" autowidth="T" width="92" datatype="5" textalign="10" textalign_fixed="10" formatstring="#,###.##" merge="F" style="test" enablefilter="T" header="Visitors;2nd Quater (B)"/>
		    <column name="col_5" datafield="qt3" visible="T" editable="F" colindex="4" autowidth="T" width="90" datatype="5" textalign="10" textalign_fixed="10" formatstring="#,###.##" merge="F" style="" enablefilter="T" header="Visitors;3rd Quater (C)"/>
		    <column name="col_6" datafield="qt4" visible="T" editable="F" colindex="5" autowidth="T" width="90" datatype="5" textalign="10" textalign_fixed="10" formatstring="#,###.##" merge="F" style="" enablefilter="T" header="Visitors;4th Quater (D)"/>
		  </columns>
		  <styles>
		    <style name="test" backcolor1="13434879" backcolor2="16777215" backalpha1="1" backalpha2="1" bordercolor="12566463" borderthickness="1" bt_top="1" bt_bottom="1" bt_left="1" bt_right="1" fontstyle="5" forecolor="3355443" fontsize="10"/>
		    <style name="normal" backcolor1="16777215" backcolor2="16777215" backalpha1="1" backalpha2="1" bordercolor="12566463" borderthickness="1" bt_top="1" bt_bottom="1" bt_left="1" bt_right="1" fontstyle="0" forecolor="3355443" fontsize="10"/>
		    <style name="filter" backcolor1="16317653" backcolor2="15066597" backalpha1="1" backalpha2="1" bordercolor="12566463" borderthickness="1" bt_top="1" bt_bottom="1" bt_left="1" bt_right="1" fontstyle="2" forecolor="0" fontsize="10"/>
		    <style name="spreadsheet" backcolor1="16317653" backcolor2="15066597" backalpha1="1" backalpha2="1" bordercolor="6710886" borderthickness="1" bt_top="1" bt_bottom="1" bt_left="1" bt_right="1" fontstyle="0" forecolor="0" fontsize="10"/>
		    <style name="subtotal" backcolor1="16317653" backcolor2="15066597" backalpha1="1" backalpha2="1" bordercolor="12566463" borderthickness="1" bt_top="1" bt_bottom="1" bt_left="1" bt_right="1" fontstyle="2" forecolor="0" fontsize="10"/>
		    <style name="fixedrow" backcolor1="15066597" backcolor2="15066597" backalpha1="1" backalpha2="1" bordercolor="6710886" borderthickness="1" bt_top="1" bt_bottom="1" bt_left="1" bt_right="1" fontstyle="0" forecolor="0" fontsize="10"/>
		    <style name="fixedcolumn" backcolor1="16317653" backcolor2="15066597" backalpha1="1" backalpha2="1" bordercolor="6710886" borderthickness="1" bt_top="1" bt_bottom="1" bt_left="1" bt_right="1" fontstyle="0" forecolor="0" fontsize="10"/>
		  </styles>
		</List>
				</mx:XML>
			</MecGrid:ResourceXML>
		</MecGrid:MecGrid>		
	</mx:VBox>
</mx:Canvas>
