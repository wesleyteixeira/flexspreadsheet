<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" xmlns:MecGrid="com.mechan.MecGrid.*" creationComplete="initApp()">
<mx:Style>
FilterRenderer
{
	fontSize: 8;
	verticalScrollBarStyleName: filterRendererScrollStyle;
}

.filterRendererScrollStyle {
    downArrowUpSkin: Embed(source="/assets/downArrow.png");
    downArrowOverSkin: Embed(source="/assets/downArrow.png");
    downArrowDownSkin: Embed(source="/assets/downArrow.png");
    upArrowUpSkin: Embed(source="/assets/upArrow.png");
    upArrowOverSkin: Embed(source="/assets/upArrow.png");
    upArrowDownSkin: Embed(source="/assets/upArrow.png");
    thumbDownSkin: Embed(source="/assets/thumb.png",
        scaleGridLeft="7", scaleGridTop="5", scaleGridRight="8", scaleGridBottom="7");
    thumbUpSkin: Embed(source="/assets/thumb.png",
        scaleGridLeft="7", scaleGridTop="5", scaleGridRight="8", scaleGridBottom="7");
    thumbOverSkin: Embed(source="/assets/thumb.png",
        scaleGridLeft="7", scaleGridTop="5", scaleGridRight="8", scaleGridBottom="7");
    trackSkin: Embed(source="/assets/scrolltrack.png",
        scaleGridLeft="7", scaleGridTop="4", scaleGridRight="8", scaleGridBottom="6" );    
}
</mx:Style>
<mx:Script>
	<![CDATA[
		import com.mechan.MecGrid.mecGridClasses.MecGridEvent;
		import mx.collections.ArrayCollection;
		import com.mechan.MecGrid.mecGridClasses.MecGridConst;
		import com.mechan.MecGrid.mecGridClasses.CellOp;

		// This demonstrates how you can set MecGrid properties by XML.
		// You can build ResourceXML With MecGridWizard by Exporting and copy to clipboard the source XML.
		//
		// Reversely you can set the property of XML String to Binary data and vice versa.
		// 
		[Bindable]
		private var datasource:ArrayCollection;
		
		private var dp:Array = [{selected:false, country:'Korea', city:'Ulsan', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Korea', city:'Seoul', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Korea', city:'Pusan', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Korea', city:'Mokpo', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Korea', city:'Anyang', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Korea', city:'Sangju', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'New York', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'South Field', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'Irvington', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'Los Altos', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'Chicago', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United States', city:'Tucson', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'France', city:'Paris', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'France', city:'Le Mans', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'France', city:'Lyon', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'France', city:'Marseille', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Germany', city:'Berlin', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Germany', city:'Hamburg', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'Germany', city:'Dusseldorf', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United Kingdom', city:'London', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United Kingdom', city:'Cambridge', qt1:0, qt2:0, qt3:0, qt4:0, avg:''},
								{selected:false, country:'United Kingdom', city:'Birmingham', qt1:0, qt2:0, qt3:0, qt4:0, avg:''}]
		
		private function initApp():void
		{
			mgrid.dragEnabled = true;
			mgrid.dropEnabled = true;
			mgrid.dragMoveEnabled = true;
			mgrid.dropMode = MecGridConst.DRAGMODE_ROW | MecGridConst.DRAGMODE_COLUMN;
			
			applyDataProvider();
		}
		
		private function applyDataProvider():void
		{
			var i:int;
			var n:int = 0;
			
			for (i=0; i < dp.length; i++)
			{
				dp[i].qt1 = Math.random() * 1000;
				dp[i].qt2 = Math.random() * 1000;
				dp[i].qt3 = Math.random() * 1000;
				dp[i].qt4 = Math.random() * 1000;
				n = i + mgrid.Rows.fixed;
				dp[i].avg = "=(D" + n + " + E" + n + " + F" + n + " + G" + n + ") / 4";
			}
			
			mgrid.addEventListener(MecGridEvent.DATAPROVIDER_UPDATE_FINISHED, dataProviderUpdatedHandler);
			datasource = new ArrayCollection(dp);
		}
		
		private function dataProviderUpdatedHandler(event:MecGridEvent):void
		{
			mgrid.removeEventListener(MecGridEvent.DATAPROVIDER_UPDATE_FINISHED, dataProviderUpdatedHandler);
			mgrid.redraw = false;
			mgrid.clearSubTotal();
			mgrid.AddSubTotal("Total", [0, 1], MecGridConst.SUBTOTAL_SUM, -1, [2, 3, 4, 5], MecGridConst.SUBTOTAL_BELOWDATA);
			mgrid.AddSubTotal("Country SubTotal", [1], MecGridConst.SUBTOTAL_SUM, 0, [2, 3, 4, 5], MecGridConst.SUBTOTAL_BELOWDATA);
			mgrid.updateSubTotal();
			mgrid.redraw = true;
		}
		
		private function changeData():void
		{
			applyDataProvider();
		}
		
		private function selectionModeChanged(event:Event):void
		{
			var selitem:String = uiSelectMode.selectedValue as String;
			var selmode:int = CellOp.SELECT_SINGLE;
			
			switch (selitem)
			{
			case "row":
				selmode = selmode | CellOp.SELECTIONMODE_ROW;
				break;
			case "cell":
				selmode = selmode | CellOp.SELECTIONMODE_CELL;
				break;
			}
			
			mgrid.SelectionMode = selmode;
		}
	]]>
</mx:Script>
	<mx:Label x="10" y="10" text="ROW FILTERS" styleName="demoTitle"/>
	<MecGrid:MecGrid id="mgrid" bottom="10" right="10" top="80" left="10" dataProvider="{datasource}" EnableRowFilter="{cboShowFilter.selected}">
		<MecGrid:ResourceXML>
			<mx:XML xmlns="">
				<List>
				  <option cols="6" fixedrows="2" fixedcols="0" merge_option="4" merge_option_fixedcolumn="0" merge_option_fixedrow="2" showspreadsheet="F" selectionmode="17" sortoption="0" treeview="T" treeColumn="0" textalignment="6" textalignment_fixed="5"/>
				  <columns>
				    <column name="col_1" datafield="country" visible="T" editable="F" colindex="0" autowidth="T" width="61" datatype="5" textalign="4" textalign_fixed="10" formatstring="" merge="T" style="" header="Country;Country"/>
				    <column name="col_2" datafield="city" visible="T" editable="F" colindex="1" autowidth="T" width="61" datatype="5" textalign="4" textalign_fixed="10" formatstring="" merge="T" style="" header="City;City"/>
				    <column name="col_3" datafield="qt1" visible="T" editable="F" colindex="2" autowidth="T" width="88" datatype="4" textalign="10" textalign_fixed="10" formatstring="#,###.##" merge="F" style="" header="Visitors;1st Quater (A)"/>
				    <column name="col_4" datafield="qt2" visible="T" editable="F" colindex="3" autowidth="T" width="92" datatype="4" textalign="10" textalign_fixed="10" formatstring="#,###.##" merge="F" style="test" header="Visitors;2nd Quater (B)"/>
				    <column name="col_5" datafield="qt3" visible="T" editable="F" colindex="4" autowidth="T" width="90" datatype="4" textalign="10" textalign_fixed="10" formatstring="#,###.##" merge="F" style="" header="Visitors;3rd Quater (C)"/>
				    <column name="col_6" datafield="qt4" visible="T" editable="F" colindex="5" autowidth="T" width="0" datatype="4" textalign="10" textalign_fixed="10" formatstring="#,###.##" merge="F" style="" header="Visitors;4th Quater (D)"/>
				  </columns>
				  <styles>
				    <style name="normal" backcolor1="16777215" backcolor2="16777215" bordercolor="12566463" borderthickness="1" fontstyle="0" forecolor="3355443"/>
				    <style name="fixedrow" backcolor1="15066597" backcolor2="15066597" bordercolor="6710886" borderthickness="1" fontstyle="0" forecolor="0"/>
				    <style name="fixedcolumn" backcolor1="16317653" backcolor2="15066597" bordercolor="6710886" borderthickness="1" fontstyle="0" forecolor="0"/>
				    <style name="spreadsheet" backcolor1="16317653" backcolor2="15066597" bordercolor="6710886" borderthickness="1" fontstyle="0" forecolor="0"/>
				    <style name="subtotal" backcolor1="16317653" backcolor2="15066597" bordercolor="12566463" borderthickness="1" fontstyle="2" forecolor="0"/>
				    <style name="test" backcolor1="13434879" backcolor2="16777215" bordercolor="12566463" borderthickness="1" fontstyle="5" forecolor="3355443"/>
				  </styles>
				</List>
			</mx:XML>
		</MecGrid:ResourceXML>
	</MecGrid:MecGrid>
	<mx:Button label="Change Data" right="10" top="30" click="changeData()"/>
	<mx:HBox y="54" right="10" left="10">
		<mx:Label text="Selection Mode"/>
		<mx:RadioButtonGroup id="uiSelectMode" change="selectionModeChanged(event)"/>
		<mx:RadioButton label="Row Selection" groupName="uiSelectMode" value="row" selected="true"/>
		<mx:RadioButton label="Cell Selection" groupName="uiSelectMode" value="cell"/>
		<mx:CheckBox label="ShowFilter" id="cboShowFilter"/>
	</mx:HBox>
</mx:Canvas>
